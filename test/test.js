// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  var log;

  log = function(msg) {
    return console.log(msg);
  };

  describe("Self test", function() {
    return it("is ok", function() {
      return expect(true).toBe(true);
    });
  });

  describe("ModuleManager", function() {
    beforeEach(function() {
      return this.subject = new window.ModuleManager();
    });
    it('#version is 1.0.0', function() {
      return expect(this.subject.version).toEqual('1.0.0');
    });
    it('#name is ModuleManager', function() {
      return expect(this.subject.name).toEqual('ModuleManager');
    });
    it('#_modules array of modules, empty at initialization', function() {
      return expect(this.subject._modules).toEqual([]);
    });
    return describe("#add", function() {
      var FakeModule;
      FakeModule = (function() {
        function FakeModule(name) {
          this.name = name;
        }

        return FakeModule;

      })();
      it('add new module', function() {
        var moduleOne;
        moduleOne = new FakeModule("one");
        expect(this.subject._modules.length).toEqual(0);
        this.subject.add(moduleOne);
        return expect(this.subject._modules[0]).toEqual(moduleOne);
      });
      return it('not add module when was added before', function() {
        var moduleOne;
        moduleOne = new FakeModule("one");
        expect(this.subject._modules.length).toEqual(0);
        this.subject.add(moduleOne);
        expect(this.subject._modules.length).toEqual(1);
        expect(this.subject._modules[0]).toEqual(moduleOne);
        this.subject.add(moduleOne);
        return expect(this.subject._modules.length).toEqual(1);
      });
    });
  });

}).call(this);
